#import <Foundation/Foundation.h>
#import "SQBatchChangeInventoryRequest.h"
#import "SQBatchChangeInventoryResponse.h"
#import "SQBatchRetrieveInventoryChangesRequest.h"
#import "SQBatchRetrieveInventoryChangesResponse.h"
#import "SQBatchRetrieveInventoryCountsRequest.h"
#import "SQBatchRetrieveInventoryCountsResponse.h"
#import "SQRetrieveInventoryAdjustmentResponse.h"
#import "SQRetrieveInventoryChangesResponse.h"
#import "SQRetrieveInventoryCountResponse.h"
#import "SQRetrieveInventoryPhysicalCountResponse.h"
#import "SQRetrieveInventoryTransferResponse.h"
#import "SQApi.h"

/**
* Square Connect API
* Client library for accessing the Square Connect APIs
*
* OpenAPI spec version: 2.0
* Contact: developers@squareup.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SQInventoryApi: NSObject <SQApi>

extern NSString* kSQInventoryApiErrorDomain;
extern NSInteger kSQInventoryApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SQApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// BatchChangeInventory
/// Applies adjustments and counts to the provided item quantities.  On success: returns the current calculated counts for all objects referenced in the request. On failure: returns a list of related errors.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQBatchChangeInventoryResponse*
-(NSURLSessionTask*) batchChangeInventoryWithBody: (SQBatchChangeInventoryRequest*) body
    completionHandler: (void (^)(SQBatchChangeInventoryResponse* output, NSError* error)) handler;


/// BatchRetrieveInventoryChanges
/// Returns historical physical counts and adjustments based on the provided filter criteria.  Results are paginated and sorted in ascending order according their `occurred_at` timestamp (oldest first).  BatchRetrieveInventoryChanges is a catch-all query endpoint for queries that cannot be handled by other, simpler endpoints.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQBatchRetrieveInventoryChangesResponse*
-(NSURLSessionTask*) batchRetrieveInventoryChangesWithBody: (SQBatchRetrieveInventoryChangesRequest*) body
    completionHandler: (void (^)(SQBatchRetrieveInventoryChangesResponse* output, NSError* error)) handler;


/// BatchRetrieveInventoryCounts
/// Returns current counts for the provided [CatalogObject](https://developer.squareup.com/reference/square_2023-10-18/objects/CatalogObject)s at the requested [Location](https://developer.squareup.com/reference/square_2023-10-18/objects/Location)s.  Results are paginated and sorted in descending order according to their `calculated_at` timestamp (newest first).  When `updated_after` is specified, only counts that have changed since that time (based on the server timestamp for the most recent change) are returned. This allows clients to perform a \"sync\" operation, for example in response to receiving a Webhook notification.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQBatchRetrieveInventoryCountsResponse*
-(NSURLSessionTask*) batchRetrieveInventoryCountsWithBody: (SQBatchRetrieveInventoryCountsRequest*) body
    completionHandler: (void (^)(SQBatchRetrieveInventoryCountsResponse* output, NSError* error)) handler;


/// DeprecatedBatchChangeInventory
/// Deprecated version of [BatchChangeInventory](https://developer.squareup.com/reference/square_2023-10-18/inventory-api/batch-change-inventory) after the endpoint URL is updated to conform to the standard convention.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQBatchChangeInventoryResponse*
-(NSURLSessionTask*) deprecatedBatchChangeInventoryWithBody: (SQBatchChangeInventoryRequest*) body
    completionHandler: (void (^)(SQBatchChangeInventoryResponse* output, NSError* error)) handler;


/// DeprecatedBatchRetrieveInventoryChanges
/// Deprecated version of [BatchRetrieveInventoryChanges](https://developer.squareup.com/reference/square_2023-10-18/inventory-api/batch-retrieve-inventory-changes) after the endpoint URL is updated to conform to the standard convention.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQBatchRetrieveInventoryChangesResponse*
-(NSURLSessionTask*) deprecatedBatchRetrieveInventoryChangesWithBody: (SQBatchRetrieveInventoryChangesRequest*) body
    completionHandler: (void (^)(SQBatchRetrieveInventoryChangesResponse* output, NSError* error)) handler;


/// DeprecatedBatchRetrieveInventoryCounts
/// Deprecated version of [BatchRetrieveInventoryCounts](https://developer.squareup.com/reference/square_2023-10-18/inventory-api/batch-retrieve-inventory-counts) after the endpoint URL is updated to conform to the standard convention.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQBatchRetrieveInventoryCountsResponse*
-(NSURLSessionTask*) deprecatedBatchRetrieveInventoryCountsWithBody: (SQBatchRetrieveInventoryCountsRequest*) body
    completionHandler: (void (^)(SQBatchRetrieveInventoryCountsResponse* output, NSError* error)) handler;


/// DeprecatedRetrieveInventoryAdjustment
/// Deprecated version of [RetrieveInventoryAdjustment](https://developer.squareup.com/reference/square_2023-10-18/inventory-api/retrieve-inventory-adjustment) after the endpoint URL is updated to conform to the standard convention.
///
/// @param adjustmentId ID of the [InventoryAdjustment](https://developer.squareup.com/reference/square_2023-10-18/objects/InventoryAdjustment) to retrieve.
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveInventoryAdjustmentResponse*
-(NSURLSessionTask*) deprecatedRetrieveInventoryAdjustmentWithAdjustmentId: (NSString*) adjustmentId
    completionHandler: (void (^)(SQRetrieveInventoryAdjustmentResponse* output, NSError* error)) handler;


/// DeprecatedRetrieveInventoryPhysicalCount
/// Deprecated version of [RetrieveInventoryPhysicalCount](https://developer.squareup.com/reference/square_2023-10-18/inventory-api/retrieve-inventory-physical-count) after the endpoint URL is updated to conform to the standard convention.
///
/// @param physicalCountId ID of the [InventoryPhysicalCount](https://developer.squareup.com/reference/square_2023-10-18/objects/InventoryPhysicalCount) to retrieve.
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveInventoryPhysicalCountResponse*
-(NSURLSessionTask*) deprecatedRetrieveInventoryPhysicalCountWithPhysicalCountId: (NSString*) physicalCountId
    completionHandler: (void (^)(SQRetrieveInventoryPhysicalCountResponse* output, NSError* error)) handler;


/// RetrieveInventoryAdjustment
/// Returns the [InventoryAdjustment](https://developer.squareup.com/reference/square_2023-10-18/objects/InventoryAdjustment) object with the provided `adjustment_id`.
///
/// @param adjustmentId ID of the [InventoryAdjustment](https://developer.squareup.com/reference/square_2023-10-18/objects/InventoryAdjustment) to retrieve.
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveInventoryAdjustmentResponse*
-(NSURLSessionTask*) retrieveInventoryAdjustmentWithAdjustmentId: (NSString*) adjustmentId
    completionHandler: (void (^)(SQRetrieveInventoryAdjustmentResponse* output, NSError* error)) handler;


/// RetrieveInventoryChanges
/// Returns a set of physical counts and inventory adjustments for the provided [CatalogObject](https://developer.squareup.com/reference/square_2023-10-18/objects/CatalogObject) at the requested [Location](https://developer.squareup.com/reference/square_2023-10-18/objects/Location)s.  You can achieve the same result by calling [BatchRetrieveInventoryChanges](https://developer.squareup.com/reference/square_2023-10-18/inventory-api/batch-retrieve-inventory-changes) and having the `catalog_object_ids` list contain a single element of the `CatalogObject` ID.  Results are paginated and sorted in descending order according to their `occurred_at` timestamp (newest first).  There are no limits on how far back the caller can page. This endpoint can be used to display recent changes for a specific item. For more sophisticated queries, use a batch endpoint.
///
/// @param catalogObjectId ID of the [CatalogObject](https://developer.squareup.com/reference/square_2023-10-18/objects/CatalogObject) to retrieve.
/// @param locationIds The [Location](https://developer.squareup.com/reference/square_2023-10-18/objects/Location) IDs to look up as a comma-separated list. An empty list queries all locations. (optional)
/// @param cursor A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information. (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveInventoryChangesResponse*
-(NSURLSessionTask*) retrieveInventoryChangesWithCatalogObjectId: (NSString*) catalogObjectId
    locationIds: (NSString*) locationIds
    cursor: (NSString*) cursor
    completionHandler: (void (^)(SQRetrieveInventoryChangesResponse* output, NSError* error)) handler;


/// RetrieveInventoryCount
/// Retrieves the current calculated stock count for a given [CatalogObject](https://developer.squareup.com/reference/square_2023-10-18/objects/CatalogObject) at a given set of [Location](https://developer.squareup.com/reference/square_2023-10-18/objects/Location)s. Responses are paginated and unsorted. For more sophisticated queries, use a batch endpoint.
///
/// @param catalogObjectId ID of the [CatalogObject](https://developer.squareup.com/reference/square_2023-10-18/objects/CatalogObject) to retrieve.
/// @param locationIds The [Location](https://developer.squareup.com/reference/square_2023-10-18/objects/Location) IDs to look up as a comma-separated list. An empty list queries all locations. (optional)
/// @param cursor A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information. (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveInventoryCountResponse*
-(NSURLSessionTask*) retrieveInventoryCountWithCatalogObjectId: (NSString*) catalogObjectId
    locationIds: (NSString*) locationIds
    cursor: (NSString*) cursor
    completionHandler: (void (^)(SQRetrieveInventoryCountResponse* output, NSError* error)) handler;


/// RetrieveInventoryPhysicalCount
/// Returns the [InventoryPhysicalCount](https://developer.squareup.com/reference/square_2023-10-18/objects/InventoryPhysicalCount) object with the provided `physical_count_id`.
///
/// @param physicalCountId ID of the [InventoryPhysicalCount](https://developer.squareup.com/reference/square_2023-10-18/objects/InventoryPhysicalCount) to retrieve.
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveInventoryPhysicalCountResponse*
-(NSURLSessionTask*) retrieveInventoryPhysicalCountWithPhysicalCountId: (NSString*) physicalCountId
    completionHandler: (void (^)(SQRetrieveInventoryPhysicalCountResponse* output, NSError* error)) handler;


/// RetrieveInventoryTransfer
/// Returns the [InventoryTransfer](https://developer.squareup.com/reference/square_2023-10-18/objects/InventoryTransfer) object with the provided `transfer_id`.
///
/// @param transferId ID of the [InventoryTransfer](https://developer.squareup.com/reference/square_2023-10-18/objects/InventoryTransfer) to retrieve.
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveInventoryTransferResponse*
-(NSURLSessionTask*) retrieveInventoryTransferWithTransferId: (NSString*) transferId
    completionHandler: (void (^)(SQRetrieveInventoryTransferResponse* output, NSError* error)) handler;



@end
