#import <Foundation/Foundation.h>
#import "SQCreateBreakTypeRequest.h"
#import "SQCreateBreakTypeResponse.h"
#import "SQCreateShiftRequest.h"
#import "SQCreateShiftResponse.h"
#import "SQDeleteBreakTypeResponse.h"
#import "SQDeleteShiftResponse.h"
#import "SQGetBreakTypeResponse.h"
#import "SQGetEmployeeWageResponse.h"
#import "SQGetShiftResponse.h"
#import "SQGetTeamMemberWageResponse.h"
#import "SQListBreakTypesResponse.h"
#import "SQListEmployeeWagesResponse.h"
#import "SQListTeamMemberWagesResponse.h"
#import "SQListWorkweekConfigsResponse.h"
#import "SQSearchShiftsRequest.h"
#import "SQSearchShiftsResponse.h"
#import "SQUpdateBreakTypeRequest.h"
#import "SQUpdateBreakTypeResponse.h"
#import "SQUpdateShiftRequest.h"
#import "SQUpdateShiftResponse.h"
#import "SQUpdateWorkweekConfigRequest.h"
#import "SQUpdateWorkweekConfigResponse.h"
#import "SQApi.h"

/**
* Square Connect API
* Client library for accessing the Square Connect APIs
*
* OpenAPI spec version: 2.0
* Contact: developers@squareup.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SQLaborApi: NSObject <SQApi>

extern NSString* kSQLaborApiErrorDomain;
extern NSInteger kSQLaborApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SQApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// CreateBreakType
/// Creates a new `BreakType`.  A `BreakType` is a template for creating `Break` objects. You must provide the following values in your request to this endpoint:  - `location_id` - `break_name` - `expected_duration` - `is_paid`  You can only have three `BreakType` instances per location. If you attempt to add a fourth `BreakType` for a location, an `INVALID_REQUEST_ERROR` \"Exceeded limit of 3 breaks per location.\" is returned.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQCreateBreakTypeResponse*
-(NSURLSessionTask*) createBreakTypeWithBody: (SQCreateBreakTypeRequest*) body
    completionHandler: (void (^)(SQCreateBreakTypeResponse* output, NSError* error)) handler;


/// CreateShift
/// Creates a new `Shift`.  A `Shift` represents a complete workday for a single employee. You must provide the following values in your request to this endpoint:  - `location_id` - `employee_id` - `start_at`  An attempt to create a new `Shift` can result in a `BAD_REQUEST` error when: - The `status` of the new `Shift` is `OPEN` and the employee has another shift with an `OPEN` status. - The `start_at` date is in the future. - The `start_at` or `end_at` date overlaps another shift for the same employee. - The `Break` instances are set in the request and a break `start_at` is before the `Shift.start_at`, a break `end_at` is after the `Shift.end_at`, or both.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQCreateShiftResponse*
-(NSURLSessionTask*) createShiftWithBody: (SQCreateShiftRequest*) body
    completionHandler: (void (^)(SQCreateShiftResponse* output, NSError* error)) handler;


/// DeleteBreakType
/// Deletes an existing `BreakType`.  A `BreakType` can be deleted even if it is referenced from a `Shift`.
///
/// @param _id The UUID for the &#x60;BreakType&#x60; being deleted.
/// 
///  code:200 message:"Success"
///
/// @return SQDeleteBreakTypeResponse*
-(NSURLSessionTask*) deleteBreakTypeWithId: (NSString*) _id
    completionHandler: (void (^)(SQDeleteBreakTypeResponse* output, NSError* error)) handler;


/// DeleteShift
/// Deletes a `Shift`.
///
/// @param _id The UUID for the &#x60;Shift&#x60; being deleted.
/// 
///  code:200 message:"Success"
///
/// @return SQDeleteShiftResponse*
-(NSURLSessionTask*) deleteShiftWithId: (NSString*) _id
    completionHandler: (void (^)(SQDeleteShiftResponse* output, NSError* error)) handler;


/// GetBreakType
/// Returns a single `BreakType` specified by `id`.
///
/// @param _id The UUID for the &#x60;BreakType&#x60; being retrieved.
/// 
///  code:200 message:"Success"
///
/// @return SQGetBreakTypeResponse*
-(NSURLSessionTask*) getBreakTypeWithId: (NSString*) _id
    completionHandler: (void (^)(SQGetBreakTypeResponse* output, NSError* error)) handler;


/// GetEmployeeWage
/// Returns a single `EmployeeWage` specified by `id`.
///
/// @param _id The UUID for the &#x60;EmployeeWage&#x60; being retrieved.
/// 
///  code:200 message:"Success"
///
/// @return SQGetEmployeeWageResponse*
-(NSURLSessionTask*) getEmployeeWageWithId: (NSString*) _id
    completionHandler: (void (^)(SQGetEmployeeWageResponse* output, NSError* error)) handler;


/// GetShift
/// Returns a single `Shift` specified by `id`.
///
/// @param _id The UUID for the &#x60;Shift&#x60; being retrieved.
/// 
///  code:200 message:"Success"
///
/// @return SQGetShiftResponse*
-(NSURLSessionTask*) getShiftWithId: (NSString*) _id
    completionHandler: (void (^)(SQGetShiftResponse* output, NSError* error)) handler;


/// GetTeamMemberWage
/// Returns a single `TeamMemberWage` specified by `id `.
///
/// @param _id The UUID for the &#x60;TeamMemberWage&#x60; being retrieved.
/// 
///  code:200 message:"Success"
///
/// @return SQGetTeamMemberWageResponse*
-(NSURLSessionTask*) getTeamMemberWageWithId: (NSString*) _id
    completionHandler: (void (^)(SQGetTeamMemberWageResponse* output, NSError* error)) handler;


/// ListBreakTypes
/// Returns a paginated list of `BreakType` instances for a business.
///
/// @param locationId Filter the returned &#x60;BreakType&#x60; results to only those that are associated with the specified location. (optional)
/// @param limit The maximum number of &#x60;BreakType&#x60; results to return per page. The number can range between 1 and 200. The default is 200. (optional)
/// @param cursor A pointer to the next page of &#x60;BreakType&#x60; results to fetch. (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQListBreakTypesResponse*
-(NSURLSessionTask*) listBreakTypesWithLocationId: (NSString*) locationId
    limit: (NSNumber*) limit
    cursor: (NSString*) cursor
    completionHandler: (void (^)(SQListBreakTypesResponse* output, NSError* error)) handler;


/// ListEmployeeWages
/// Returns a paginated list of `EmployeeWage` instances for a business.
///
/// @param employeeId Filter the returned wages to only those that are associated with the specified employee. (optional)
/// @param limit The maximum number of &#x60;EmployeeWage&#x60; results to return per page. The number can range between 1 and 200. The default is 200. (optional)
/// @param cursor A pointer to the next page of &#x60;EmployeeWage&#x60; results to fetch. (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQListEmployeeWagesResponse*
-(NSURLSessionTask*) listEmployeeWagesWithEmployeeId: (NSString*) employeeId
    limit: (NSNumber*) limit
    cursor: (NSString*) cursor
    completionHandler: (void (^)(SQListEmployeeWagesResponse* output, NSError* error)) handler;


/// ListTeamMemberWages
/// Returns a paginated list of `TeamMemberWage` instances for a business.
///
/// @param teamMemberId Filter the returned wages to only those that are associated with the specified team member. (optional)
/// @param limit The maximum number of &#x60;TeamMemberWage&#x60; results to return per page. The number can range between 1 and 200. The default is 200. (optional)
/// @param cursor A pointer to the next page of &#x60;EmployeeWage&#x60; results to fetch. (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQListTeamMemberWagesResponse*
-(NSURLSessionTask*) listTeamMemberWagesWithTeamMemberId: (NSString*) teamMemberId
    limit: (NSNumber*) limit
    cursor: (NSString*) cursor
    completionHandler: (void (^)(SQListTeamMemberWagesResponse* output, NSError* error)) handler;


/// ListWorkweekConfigs
/// Returns a list of `WorkweekConfig` instances for a business.
///
/// @param limit The maximum number of &#x60;WorkweekConfigs&#x60; results to return per page. (optional)
/// @param cursor A pointer to the next page of &#x60;WorkweekConfig&#x60; results to fetch. (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQListWorkweekConfigsResponse*
-(NSURLSessionTask*) listWorkweekConfigsWithLimit: (NSNumber*) limit
    cursor: (NSString*) cursor
    completionHandler: (void (^)(SQListWorkweekConfigsResponse* output, NSError* error)) handler;


/// SearchShifts
/// Returns a paginated list of `Shift` records for a business. The list to be returned can be filtered by: - Location IDs. - Employee IDs. - Shift status (`OPEN` and `CLOSED`). - Shift start. - Shift end. - Workday details.  The list can be sorted by: - `start_at`. - `end_at`. - `created_at`. - `updated_at`.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQSearchShiftsResponse*
-(NSURLSessionTask*) searchShiftsWithBody: (SQSearchShiftsRequest*) body
    completionHandler: (void (^)(SQSearchShiftsResponse* output, NSError* error)) handler;


/// UpdateBreakType
/// Updates an existing `BreakType`.
///
/// @param _id  The UUID for the &#x60;BreakType&#x60; being updated.
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQUpdateBreakTypeResponse*
-(NSURLSessionTask*) updateBreakTypeWithId: (NSString*) _id
    body: (SQUpdateBreakTypeRequest*) body
    completionHandler: (void (^)(SQUpdateBreakTypeResponse* output, NSError* error)) handler;


/// UpdateShift
/// Updates an existing `Shift`.  When adding a `Break` to a `Shift`, any earlier `Break` instances in the `Shift` have the `end_at` property set to a valid RFC-3339 datetime string.  When closing a `Shift`, all `Break` instances in the `Shift` must be complete with `end_at` set on each `Break`.
///
/// @param _id The ID of the object being updated.
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQUpdateShiftResponse*
-(NSURLSessionTask*) updateShiftWithId: (NSString*) _id
    body: (SQUpdateShiftRequest*) body
    completionHandler: (void (^)(SQUpdateShiftResponse* output, NSError* error)) handler;


/// UpdateWorkweekConfig
/// Updates a `WorkweekConfig`.
///
/// @param _id The UUID for the &#x60;WorkweekConfig&#x60; object being updated.
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQUpdateWorkweekConfigResponse*
-(NSURLSessionTask*) updateWorkweekConfigWithId: (NSString*) _id
    body: (SQUpdateWorkweekConfigRequest*) body
    completionHandler: (void (^)(SQUpdateWorkweekConfigResponse* output, NSError* error)) handler;



@end
