#import <Foundation/Foundation.h>
#import "SQCreateCardRequest.h"
#import "SQCreateCardResponse.h"
#import "SQDisableCardResponse.h"
#import "SQListCardsResponse.h"
#import "SQRetrieveCardResponse.h"
#import "SQApi.h"

/**
* Square Connect API
* Client library for accessing the Square Connect APIs
*
* OpenAPI spec version: 2.0
* Contact: developers@squareup.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SQCardsApi: NSObject <SQApi>

extern NSString* kSQCardsApiErrorDomain;
extern NSInteger kSQCardsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SQApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// CreateCard
/// Adds a card on file to an existing merchant.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQCreateCardResponse*
-(NSURLSessionTask*) createCardWithBody: (SQCreateCardRequest*) body
    completionHandler: (void (^)(SQCreateCardResponse* output, NSError* error)) handler;


/// DisableCard
/// Disables the card, preventing any further updates or charges. Disabling an already disabled card is allowed but has no effect.
///
/// @param cardId Unique ID for the desired Card.
/// 
///  code:200 message:"Success"
///
/// @return SQDisableCardResponse*
-(NSURLSessionTask*) disableCardWithCardId: (NSString*) cardId
    completionHandler: (void (^)(SQDisableCardResponse* output, NSError* error)) handler;


/// ListCards
/// Retrieves a list of cards owned by the account making the request. A max of 25 cards will be returned.
///
/// @param cursor A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination) for more information. (optional)
/// @param customerId Limit results to cards associated with the customer supplied. By default, all cards owned by the merchant are returned. (optional)
/// @param includeDisabled Includes disabled cards. By default, all enabled cards owned by the merchant are returned. (optional)
/// @param referenceId Limit results to cards associated with the reference_id supplied. (optional)
/// @param sortOrder Sorts the returned list by when the card was created with the specified order. This field defaults to ASC. (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQListCardsResponse*
-(NSURLSessionTask*) listCardsWithCursor: (NSString*) cursor
    customerId: (NSString*) customerId
    includeDisabled: (NSNumber*) includeDisabled
    referenceId: (NSString*) referenceId
    sortOrder: (NSString*) sortOrder
    completionHandler: (void (^)(SQListCardsResponse* output, NSError* error)) handler;


/// RetrieveCard
/// Retrieves details for a specific Card.
///
/// @param cardId Unique ID for the desired Card.
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveCardResponse*
-(NSURLSessionTask*) retrieveCardWithCardId: (NSString*) cardId
    completionHandler: (void (^)(SQRetrieveCardResponse* output, NSError* error)) handler;



@end
