#import <Foundation/Foundation.h>
#import "SQAddGroupToCustomerResponse.h"
#import "SQCreateCustomerCardRequest.h"
#import "SQCreateCustomerCardResponse.h"
#import "SQCreateCustomerRequest.h"
#import "SQCreateCustomerResponse.h"
#import "SQDeleteCustomerCardResponse.h"
#import "SQDeleteCustomerResponse.h"
#import "SQListCustomersResponse.h"
#import "SQRemoveGroupFromCustomerResponse.h"
#import "SQRetrieveCustomerResponse.h"
#import "SQSearchCustomersRequest.h"
#import "SQSearchCustomersResponse.h"
#import "SQUpdateCustomerRequest.h"
#import "SQUpdateCustomerResponse.h"
#import "SQApi.h"

/**
* Square Connect API
* Client library for accessing the Square Connect APIs
*
* OpenAPI spec version: 2.0
* Contact: developers@squareup.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SQCustomersApi: NSObject <SQApi>

extern NSString* kSQCustomersApiErrorDomain;
extern NSInteger kSQCustomersApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SQApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// AddGroupToCustomer
/// Adds a group membership to a customer.  The customer is identified by the `customer_id` value and the customer group is identified by the `group_id` value.
///
/// @param customerId The ID of the customer to add to a group.
/// @param groupId The ID of the customer group to add the customer to.
/// 
///  code:200 message:"Success"
///
/// @return SQAddGroupToCustomerResponse*
-(NSURLSessionTask*) addGroupToCustomerWithCustomerId: (NSString*) customerId
    groupId: (NSString*) groupId
    completionHandler: (void (^)(SQAddGroupToCustomerResponse* output, NSError* error)) handler;


/// CreateCustomer
/// Creates a new customer for a business.  You must provide at least one of the following values in your request to this endpoint:  - `given_name` - `family_name` - `company_name` - `email_address` - `phone_number`
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQCreateCustomerResponse*
-(NSURLSessionTask*) createCustomerWithBody: (SQCreateCustomerRequest*) body
    completionHandler: (void (^)(SQCreateCustomerResponse* output, NSError* error)) handler;


/// CreateCustomerCard
/// Adds a card on file to an existing customer.  As with charges, calls to `CreateCustomerCard` are idempotent. Multiple calls with the same card nonce return the same card record that was created with the provided nonce during the _first_ call.
///
/// @param customerId The Square ID of the customer profile the card is linked to.
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQCreateCustomerCardResponse*
-(NSURLSessionTask*) createCustomerCardWithCustomerId: (NSString*) customerId
    body: (SQCreateCustomerCardRequest*) body
    completionHandler: (void (^)(SQCreateCustomerCardResponse* output, NSError* error)) handler;


/// DeleteCustomer
/// Deletes a customer profile from a business. This operation also unlinks any associated cards on file.   As a best practice, include the `version` field in the request to enable [optimistic concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency) control. If included, the value must be set to the current version of the customer profile.   To delete a customer profile that was created by merging existing profiles, you must use the ID of the newly created profile.
///
/// @param customerId The ID of the customer to delete.
/// @param version The current version of the customer profile.  As a best practice, you should include this parameter to enable [optimistic concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency) control.  For more information, see [Delete a customer profile](https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#delete-customer-profile). (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQDeleteCustomerResponse*
-(NSURLSessionTask*) deleteCustomerWithCustomerId: (NSString*) customerId
    version: (NSNumber*) version
    completionHandler: (void (^)(SQDeleteCustomerResponse* output, NSError* error)) handler;


/// DeleteCustomerCard
/// Removes a card on file from a customer.
///
/// @param customerId The ID of the customer that the card on file belongs to.
/// @param cardId The ID of the card on file to delete.
/// 
///  code:200 message:"Success"
///
/// @return SQDeleteCustomerCardResponse*
-(NSURLSessionTask*) deleteCustomerCardWithCustomerId: (NSString*) customerId
    cardId: (NSString*) cardId
    completionHandler: (void (^)(SQDeleteCustomerCardResponse* output, NSError* error)) handler;


/// ListCustomers
/// Lists customer profiles associated with a Square account.  Under normal operating conditions, newly created or updated customer profiles become available for the listing operation in well under 30 seconds. Occasionally, propagation of the new or updated profiles can take closer to one minute or longer, especially during network incidents and outages.
///
/// @param cursor A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination). (optional)
/// @param limit The maximum number of results to return in a single page. This limit is advisory. The response might contain more or fewer results. If the specified limit is less than 1 or greater than 100, Square returns a &#x60;400 VALUE_TOO_LOW&#x60; or &#x60;400 VALUE_TOO_HIGH&#x60; error. The default value is 100.  For more information, see [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination). (optional)
/// @param sortField Indicates how customers should be sorted.  The default value is &#x60;DEFAULT&#x60;. (optional)
/// @param sortOrder Indicates whether customers should be sorted in ascending (&#x60;ASC&#x60;) or descending (&#x60;DESC&#x60;) order.  The default value is &#x60;ASC&#x60;. (optional)
/// @param count Indicates whether to return the total count of customers in the &#x60;count&#x60; field of the response.  The default value is &#x60;false&#x60;. (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQListCustomersResponse*
-(NSURLSessionTask*) listCustomersWithCursor: (NSString*) cursor
    limit: (NSNumber*) limit
    sortField: (NSString*) sortField
    sortOrder: (NSString*) sortOrder
    count: (NSNumber*) count
    completionHandler: (void (^)(SQListCustomersResponse* output, NSError* error)) handler;


/// RemoveGroupFromCustomer
/// Removes a group membership from a customer.  The customer is identified by the `customer_id` value and the customer group is identified by the `group_id` value.
///
/// @param customerId The ID of the customer to remove from the group.
/// @param groupId The ID of the customer group to remove the customer from.
/// 
///  code:200 message:"Success"
///
/// @return SQRemoveGroupFromCustomerResponse*
-(NSURLSessionTask*) removeGroupFromCustomerWithCustomerId: (NSString*) customerId
    groupId: (NSString*) groupId
    completionHandler: (void (^)(SQRemoveGroupFromCustomerResponse* output, NSError* error)) handler;


/// RetrieveCustomer
/// Returns details for a single customer.
///
/// @param customerId The ID of the customer to retrieve.
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveCustomerResponse*
-(NSURLSessionTask*) retrieveCustomerWithCustomerId: (NSString*) customerId
    completionHandler: (void (^)(SQRetrieveCustomerResponse* output, NSError* error)) handler;


/// SearchCustomers
/// Searches the customer profiles associated with a Square account using one or more supported query filters.  Calling `SearchCustomers` without any explicit query filter returns all customer profiles ordered alphabetically based on `given_name` and `family_name`.  Under normal operating conditions, newly created or updated customer profiles become available for the search operation in well under 30 seconds. Occasionally, propagation of the new or updated profiles can take closer to one minute or longer, especially during network incidents and outages.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQSearchCustomersResponse*
-(NSURLSessionTask*) searchCustomersWithBody: (SQSearchCustomersRequest*) body
    completionHandler: (void (^)(SQSearchCustomersResponse* output, NSError* error)) handler;


/// UpdateCustomer
/// Updates a customer profile. This endpoint supports sparse updates, so only new or changed fields are required in the request. To add or update a field, specify the new value. To remove a field, specify `null` and include the `X-Clear-Null` header set to `true` (recommended) or specify an empty string (string fields only).  As a best practice, include the `version` field in the request to enable [optimistic concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency) control. If included, the value must be set to the current version of the customer profile.  To update a customer profile that was created by merging existing profiles, you must use the ID of the newly created profile.  You cannot use this endpoint to change cards on file. To make changes, use the [Cards API](https://developer.squareup.com/reference/square_2023-10-18/cards-api) or [Gift Cards API](https://developer.squareup.com/reference/square_2023-10-18/gift-cards-api).
///
/// @param customerId The ID of the customer to update.
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQUpdateCustomerResponse*
-(NSURLSessionTask*) updateCustomerWithCustomerId: (NSString*) customerId
    body: (SQUpdateCustomerRequest*) body
    completionHandler: (void (^)(SQUpdateCustomerResponse* output, NSError* error)) handler;



@end
