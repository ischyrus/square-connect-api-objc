#import <Foundation/Foundation.h>
#import "SQListMerchantsResponse.h"
#import "SQRetrieveMerchantResponse.h"
#import "SQApi.h"

/**
* Square Connect API
* Client library for accessing the Square Connect APIs
*
* OpenAPI spec version: 2.0
* Contact: developers@squareup.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SQMerchantsApi: NSObject <SQApi>

extern NSString* kSQMerchantsApiErrorDomain;
extern NSInteger kSQMerchantsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SQApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// ListMerchants
/// Provides details about the merchant associated with a given access token.  The access token used to connect your application to a Square seller is associated with a single merchant. That means that `ListMerchants` returns a list with a single `Merchant` object. You can specify your personal access token to get your own merchant information or specify an OAuth token to get the information for the merchant that granted your application access.  If you know the merchant ID, you can also use the [RetrieveMerchant](https://developer.squareup.com/reference/square_2023-10-18/merchants-api/retrieve-merchant) endpoint to retrieve the merchant information.
///
/// @param cursor The cursor generated by the previous response. (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQListMerchantsResponse*
-(NSURLSessionTask*) listMerchantsWithCursor: (NSNumber*) cursor
    completionHandler: (void (^)(SQListMerchantsResponse* output, NSError* error)) handler;


/// RetrieveMerchant
/// Retrieves the `Merchant` object for the given `merchant_id`.
///
/// @param merchantId The ID of the merchant to retrieve. If the string \&quot;me\&quot; is supplied as the ID, then retrieve the merchant that is currently accessible to this call.
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveMerchantResponse*
-(NSURLSessionTask*) retrieveMerchantWithMerchantId: (NSString*) merchantId
    completionHandler: (void (^)(SQRetrieveMerchantResponse* output, NSError* error)) handler;



@end
