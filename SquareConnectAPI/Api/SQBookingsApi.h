#import <Foundation/Foundation.h>
#import "SQBulkRetrieveBookingsRequest.h"
#import "SQBulkRetrieveBookingsResponse.h"
#import "SQBulkRetrieveTeamMemberBookingProfilesRequest.h"
#import "SQBulkRetrieveTeamMemberBookingProfilesResponse.h"
#import "SQCancelBookingRequest.h"
#import "SQCancelBookingResponse.h"
#import "SQCreateBookingRequest.h"
#import "SQCreateBookingResponse.h"
#import "SQListBookingsResponse.h"
#import "SQListLocationBookingProfilesResponse.h"
#import "SQListTeamMemberBookingProfilesResponse.h"
#import "SQRetrieveBookingResponse.h"
#import "SQRetrieveBusinessBookingProfileResponse.h"
#import "SQRetrieveLocationBookingProfileResponse.h"
#import "SQRetrieveTeamMemberBookingProfileResponse.h"
#import "SQSearchAvailabilityRequest.h"
#import "SQSearchAvailabilityResponse.h"
#import "SQUpdateBookingRequest.h"
#import "SQUpdateBookingResponse.h"
#import "SQApi.h"

/**
* Square Connect API
* Client library for accessing the Square Connect APIs
*
* OpenAPI spec version: 2.0
* Contact: developers@squareup.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SQBookingsApi: NSObject <SQApi>

extern NSString* kSQBookingsApiErrorDomain;
extern NSInteger kSQBookingsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SQApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// BulkRetrieveBookings
/// Bulk-Retrieves a list of bookings by booking IDs.  To call this endpoint with buyer-level permissions, set `APPOINTMENTS_READ` for the OAuth scope. To call this endpoint with seller-level permissions, set `APPOINTMENTS_ALL_READ` and `APPOINTMENTS_READ` for the OAuth scope.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQBulkRetrieveBookingsResponse*
-(NSURLSessionTask*) bulkRetrieveBookingsWithBody: (SQBulkRetrieveBookingsRequest*) body
    completionHandler: (void (^)(SQBulkRetrieveBookingsResponse* output, NSError* error)) handler;


/// BulkRetrieveTeamMemberBookingProfiles
/// Retrieves one or more team members' booking profiles.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQBulkRetrieveTeamMemberBookingProfilesResponse*
-(NSURLSessionTask*) bulkRetrieveTeamMemberBookingProfilesWithBody: (SQBulkRetrieveTeamMemberBookingProfilesRequest*) body
    completionHandler: (void (^)(SQBulkRetrieveTeamMemberBookingProfilesResponse* output, NSError* error)) handler;


/// CancelBooking
/// Cancels an existing booking.  To call this endpoint with buyer-level permissions, set `APPOINTMENTS_WRITE` for the OAuth scope. To call this endpoint with seller-level permissions, set `APPOINTMENTS_ALL_WRITE` and `APPOINTMENTS_WRITE` for the OAuth scope.  For calls to this endpoint with seller-level permissions to succeed, the seller must have subscribed to *Appointments Plus* or *Appointments Premium*.
///
/// @param bookingId The ID of the [Booking](https://developer.squareup.com/reference/square_2023-10-18/objects/Booking) object representing the to-be-cancelled booking.
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQCancelBookingResponse*
-(NSURLSessionTask*) cancelBookingWithBookingId: (NSString*) bookingId
    body: (SQCancelBookingRequest*) body
    completionHandler: (void (^)(SQCancelBookingResponse* output, NSError* error)) handler;


/// CreateBooking
/// Creates a booking.  The required input must include the following: - `Booking.location_id` - `Booking.start_at` - `Booking.team_member_id` - `Booking.AppointmentSegment.service_variation_id` - `Booking.AppointmentSegment.service_variation_version`  To call this endpoint with buyer-level permissions, set `APPOINTMENTS_WRITE` for the OAuth scope. To call this endpoint with seller-level permissions, set `APPOINTMENTS_ALL_WRITE` and `APPOINTMENTS_WRITE` for the OAuth scope.  For calls to this endpoint with seller-level permissions to succeed, the seller must have subscribed to *Appointments Plus* or *Appointments Premium*.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQCreateBookingResponse*
-(NSURLSessionTask*) createBookingWithBody: (SQCreateBookingRequest*) body
    completionHandler: (void (^)(SQCreateBookingResponse* output, NSError* error)) handler;


/// ListBookings
/// Retrieve a collection of bookings.  To call this endpoint with buyer-level permissions, set `APPOINTMENTS_READ` for the OAuth scope. To call this endpoint with seller-level permissions, set `APPOINTMENTS_ALL_READ` and `APPOINTMENTS_READ` for the OAuth scope.
///
/// @param limit The maximum number of results per page to return in a paged response. (optional)
/// @param cursor The pagination cursor from the preceding response to return the next page of the results. Do not set this when retrieving the first page of the results. (optional)
/// @param customerId The [customer](https://developer.squareup.com/reference/square_2023-10-18/objects/Customer) for whom to retrieve bookings. If this is not set, bookings for all customers are retrieved. (optional)
/// @param teamMemberId The team member for whom to retrieve bookings. If this is not set, bookings of all members are retrieved. (optional)
/// @param locationId The location for which to retrieve bookings. If this is not set, all locations&#39; bookings are retrieved. (optional)
/// @param startAtMin The RFC 3339 timestamp specifying the earliest of the start time. If this is not set, the current time is used. (optional)
/// @param startAtMax The RFC 3339 timestamp specifying the latest of the start time. If this is not set, the time of 31 days after &#x60;start_at_min&#x60; is used. (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQListBookingsResponse*
-(NSURLSessionTask*) listBookingsWithLimit: (NSNumber*) limit
    cursor: (NSString*) cursor
    customerId: (NSString*) customerId
    teamMemberId: (NSString*) teamMemberId
    locationId: (NSString*) locationId
    startAtMin: (NSString*) startAtMin
    startAtMax: (NSString*) startAtMax
    completionHandler: (void (^)(SQListBookingsResponse* output, NSError* error)) handler;


/// ListLocationBookingProfiles
/// Lists location booking profiles of a seller.
///
/// @param limit The maximum number of results to return in a paged response. (optional)
/// @param cursor The pagination cursor from the preceding response to return the next page of the results. Do not set this when retrieving the first page of the results. (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQListLocationBookingProfilesResponse*
-(NSURLSessionTask*) listLocationBookingProfilesWithLimit: (NSNumber*) limit
    cursor: (NSString*) cursor
    completionHandler: (void (^)(SQListLocationBookingProfilesResponse* output, NSError* error)) handler;


/// ListTeamMemberBookingProfiles
/// Lists booking profiles for team members.
///
/// @param bookableOnly Indicates whether to include only bookable team members in the returned result (&#x60;true&#x60;) or not (&#x60;false&#x60;). (optional)
/// @param limit The maximum number of results to return in a paged response. (optional)
/// @param cursor The pagination cursor from the preceding response to return the next page of the results. Do not set this when retrieving the first page of the results. (optional)
/// @param locationId Indicates whether to include only team members enabled at the given location in the returned result. (optional)
/// 
///  code:200 message:"Success"
///
/// @return SQListTeamMemberBookingProfilesResponse*
-(NSURLSessionTask*) listTeamMemberBookingProfilesWithBookableOnly: (NSNumber*) bookableOnly
    limit: (NSNumber*) limit
    cursor: (NSString*) cursor
    locationId: (NSString*) locationId
    completionHandler: (void (^)(SQListTeamMemberBookingProfilesResponse* output, NSError* error)) handler;


/// RetrieveBooking
/// Retrieves a booking.  To call this endpoint with buyer-level permissions, set `APPOINTMENTS_READ` for the OAuth scope. To call this endpoint with seller-level permissions, set `APPOINTMENTS_ALL_READ` and `APPOINTMENTS_READ` for the OAuth scope.
///
/// @param bookingId The ID of the [Booking](https://developer.squareup.com/reference/square_2023-10-18/objects/Booking) object representing the to-be-retrieved booking.
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveBookingResponse*
-(NSURLSessionTask*) retrieveBookingWithBookingId: (NSString*) bookingId
    completionHandler: (void (^)(SQRetrieveBookingResponse* output, NSError* error)) handler;


/// RetrieveBusinessBookingProfile
/// Retrieves a seller's booking profile.
///
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveBusinessBookingProfileResponse*
-(NSURLSessionTask*) retrieveBusinessBookingProfileWithCompletionHandler: 
    (void (^)(SQRetrieveBusinessBookingProfileResponse* output, NSError* error)) handler;


/// RetrieveLocationBookingProfile
/// Retrieves a seller's location booking profile.
///
/// @param locationId The ID of the location to retrieve the booking profile.
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveLocationBookingProfileResponse*
-(NSURLSessionTask*) retrieveLocationBookingProfileWithLocationId: (NSString*) locationId
    completionHandler: (void (^)(SQRetrieveLocationBookingProfileResponse* output, NSError* error)) handler;


/// RetrieveTeamMemberBookingProfile
/// Retrieves a team member's booking profile.
///
/// @param teamMemberId The ID of the team member to retrieve.
/// 
///  code:200 message:"Success"
///
/// @return SQRetrieveTeamMemberBookingProfileResponse*
-(NSURLSessionTask*) retrieveTeamMemberBookingProfileWithTeamMemberId: (NSString*) teamMemberId
    completionHandler: (void (^)(SQRetrieveTeamMemberBookingProfileResponse* output, NSError* error)) handler;


/// SearchAvailability
/// Searches for availabilities for booking.  To call this endpoint with buyer-level permissions, set `APPOINTMENTS_READ` for the OAuth scope. To call this endpoint with seller-level permissions, set `APPOINTMENTS_ALL_READ` and `APPOINTMENTS_READ` for the OAuth scope.
///
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQSearchAvailabilityResponse*
-(NSURLSessionTask*) searchAvailabilityWithBody: (SQSearchAvailabilityRequest*) body
    completionHandler: (void (^)(SQSearchAvailabilityResponse* output, NSError* error)) handler;


/// UpdateBooking
/// Updates a booking.  To call this endpoint with buyer-level permissions, set `APPOINTMENTS_WRITE` for the OAuth scope. To call this endpoint with seller-level permissions, set `APPOINTMENTS_ALL_WRITE` and `APPOINTMENTS_WRITE` for the OAuth scope.  For calls to this endpoint with seller-level permissions to succeed, the seller must have subscribed to *Appointments Plus* or *Appointments Premium*.
///
/// @param bookingId The ID of the [Booking](https://developer.squareup.com/reference/square_2023-10-18/objects/Booking) object representing the to-be-updated booking.
/// @param body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
/// 
///  code:200 message:"Success"
///
/// @return SQUpdateBookingResponse*
-(NSURLSessionTask*) updateBookingWithBookingId: (NSString*) bookingId
    body: (SQUpdateBookingRequest*) body
    completionHandler: (void (^)(SQUpdateBookingResponse* output, NSError* error)) handler;



@end
