#import <Foundation/Foundation.h>
#import "SQObject.h"

/**
* Square Connect API
* Client library for accessing the Square Connect APIs
*
* OpenAPI spec version: 2.0
* Contact: developers@squareup.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#import "SQGiftCardActivityActivate.h"
#import "SQGiftCardActivityAdjustDecrement.h"
#import "SQGiftCardActivityAdjustIncrement.h"
#import "SQGiftCardActivityBlock.h"
#import "SQGiftCardActivityClearBalance.h"
#import "SQGiftCardActivityDeactivate.h"
#import "SQGiftCardActivityImport.h"
#import "SQGiftCardActivityImportReversal.h"
#import "SQGiftCardActivityLoad.h"
#import "SQGiftCardActivityRedeem.h"
#import "SQGiftCardActivityRefund.h"
#import "SQGiftCardActivityTransferBalanceFrom.h"
#import "SQGiftCardActivityTransferBalanceTo.h"
#import "SQGiftCardActivityUnblock.h"
#import "SQGiftCardActivityUnlinkedActivityRefund.h"
#import "SQMoney.h"
@protocol SQGiftCardActivityActivate;
@class SQGiftCardActivityActivate;
@protocol SQGiftCardActivityAdjustDecrement;
@class SQGiftCardActivityAdjustDecrement;
@protocol SQGiftCardActivityAdjustIncrement;
@class SQGiftCardActivityAdjustIncrement;
@protocol SQGiftCardActivityBlock;
@class SQGiftCardActivityBlock;
@protocol SQGiftCardActivityClearBalance;
@class SQGiftCardActivityClearBalance;
@protocol SQGiftCardActivityDeactivate;
@class SQGiftCardActivityDeactivate;
@protocol SQGiftCardActivityImport;
@class SQGiftCardActivityImport;
@protocol SQGiftCardActivityImportReversal;
@class SQGiftCardActivityImportReversal;
@protocol SQGiftCardActivityLoad;
@class SQGiftCardActivityLoad;
@protocol SQGiftCardActivityRedeem;
@class SQGiftCardActivityRedeem;
@protocol SQGiftCardActivityRefund;
@class SQGiftCardActivityRefund;
@protocol SQGiftCardActivityTransferBalanceFrom;
@class SQGiftCardActivityTransferBalanceFrom;
@protocol SQGiftCardActivityTransferBalanceTo;
@class SQGiftCardActivityTransferBalanceTo;
@protocol SQGiftCardActivityUnblock;
@class SQGiftCardActivityUnblock;
@protocol SQGiftCardActivityUnlinkedActivityRefund;
@class SQGiftCardActivityUnlinkedActivityRefund;
@protocol SQMoney;
@class SQMoney;



@protocol SQGiftCardActivity
@end

@interface SQGiftCardActivity : SQObject

/* The Square-assigned ID of the gift card activity. [optional]
 */
@property(nonatomic) NSString* _id;
/* The type of gift card activity. 
 */
@property(nonatomic) NSString* type;
/* The ID of the [business location](https://developer.squareup.com/reference/square_2023-10-18/objects/Location) where the activity occurred. 
 */
@property(nonatomic) NSString* locationId;
/* The timestamp when the gift card activity was created, in RFC 3339 format. [optional]
 */
@property(nonatomic) NSString* createdAt;
/* The gift card ID. When creating a gift card activity, `gift_card_id` is not required if  `gift_card_gan` is specified. [optional]
 */
@property(nonatomic) NSString* giftCardId;
/* The gift card account number (GAN). When creating a gift card activity, `gift_card_gan`  is not required if `gift_card_id` is specified. [optional]
 */
@property(nonatomic) NSString* giftCardGan;
/* The final balance on the gift card after the action is completed. [optional]
 */
@property(nonatomic) SQMoney* giftCardBalanceMoney;
/* Additional details about a `LOAD` activity, which is used to reload money onto a gift card. [optional]
 */
@property(nonatomic) SQGiftCardActivityLoad* loadActivityDetails;
/* Additional details about an `ACTIVATE` activity, which is used to activate a gift card with  an initial balance. [optional]
 */
@property(nonatomic) SQGiftCardActivityActivate* activateActivityDetails;
/* Additional details about a `REDEEM` activity, which is used to redeem a gift card for a purchase.  For applications that process payments using the Square Payments API, Square creates a `REDEEM` activity that  updates the gift card balance after the corresponding [CreatePayment](https://developer.squareup.com/reference/square_2023-10-18/payments-api/create-payment)  request is completed. Applications that use a custom payment processing system must call  [CreateGiftCardActivity](https://developer.squareup.com/reference/square_2023-10-18/gift-card-activities-api/create-gift-card-activity) to create the `REDEEM` activity. [optional]
 */
@property(nonatomic) SQGiftCardActivityRedeem* redeemActivityDetails;
/* Additional details about a `CLEAR_BALANCE` activity, which is used to set the balance of a gift card to zero. [optional]
 */
@property(nonatomic) SQGiftCardActivityClearBalance* clearBalanceActivityDetails;
/* Additional details about a `DEACTIVATE` activity, which is used to deactivate a gift card. [optional]
 */
@property(nonatomic) SQGiftCardActivityDeactivate* deactivateActivityDetails;
/* Additional details about an `ADJUST_INCREMENT` activity, which is used to add money to a gift card  outside of a typical `ACTIVATE`, `LOAD`, or `REFUND` activity flow. [optional]
 */
@property(nonatomic) SQGiftCardActivityAdjustIncrement* adjustIncrementActivityDetails;
/* Additional details about an `ADJUST_DECREMENT` activity, which is used to deduct money from a gift  card outside of a typical `REDEEM` activity flow. [optional]
 */
@property(nonatomic) SQGiftCardActivityAdjustDecrement* adjustDecrementActivityDetails;
/* Additional details about a `REFUND` activity, which is used to add money to a gift card when  refunding a payment.  For applications that process payments using the Square Payments API, Square creates a `REFUND` activity that  updates the gift card balance after the corresponding [RefundPayment](https://developer.squareup.com/reference/square_2023-10-18/refunds-api/refund-payment)  request is completed. Applications that use a custom payment processing system must call  [CreateGiftCardActivity](https://developer.squareup.com/reference/square_2023-10-18/gift-card-activities-api/create-gift-card-activity) to create the `REFUND` activity. [optional]
 */
@property(nonatomic) SQGiftCardActivityRefund* refundActivityDetails;
/* Additional details about an `UNLINKED_ACTIVITY_REFUND` activity. This activity is used to add money  to a gift card when refunding a payment that was processed using a custom payment processing system and not linked to the gift card. [optional]
 */
@property(nonatomic) SQGiftCardActivityUnlinkedActivityRefund* unlinkedActivityRefundActivityDetails;
/* Additional details about an `IMPORT` activity, which Square uses to import a third-party  gift card with a balance. [optional]
 */
@property(nonatomic) SQGiftCardActivityImport* importActivityDetails;
/* Additional details about a `BLOCK` activity, which Square uses to temporarily block a gift card. [optional]
 */
@property(nonatomic) SQGiftCardActivityBlock* blockActivityDetails;
/* Additional details about an `UNBLOCK` activity, which Square uses to unblock a gift card. [optional]
 */
@property(nonatomic) SQGiftCardActivityUnblock* unblockActivityDetails;
/* Additional details about an `IMPORT_REVERSAL` activity, which Square uses to reverse the  import of a third-party gift card. [optional]
 */
@property(nonatomic) SQGiftCardActivityImportReversal* importReversalActivityDetails;
/* Additional details about a `TRANSFER_BALANCE_TO` activity, which Square uses to add money to a gift card as the result of a transfer from another gift card. [optional]
 */
@property(nonatomic) SQGiftCardActivityTransferBalanceTo* transferBalanceToActivityDetails;
/* Additional details about a `TRANSFER_BALANCE_FROM` activity, which Square uses to deduct money from a gift as the result of a transfer to another gift card. [optional]
 */
@property(nonatomic) SQGiftCardActivityTransferBalanceFrom* transferBalanceFromActivityDetails;

@end
