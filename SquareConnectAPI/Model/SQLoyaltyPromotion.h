#import <Foundation/Foundation.h>
#import "SQObject.h"

/**
* Square Connect API
* Client library for accessing the Square Connect APIs
*
* OpenAPI spec version: 2.0
* Contact: developers@squareup.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#import "SQLoyaltyPromotionAvailableTimeData.h"
#import "SQLoyaltyPromotionIncentive.h"
#import "SQLoyaltyPromotionTriggerLimit.h"
#import "SQMoney.h"
@protocol SQLoyaltyPromotionAvailableTimeData;
@class SQLoyaltyPromotionAvailableTimeData;
@protocol SQLoyaltyPromotionIncentive;
@class SQLoyaltyPromotionIncentive;
@protocol SQLoyaltyPromotionTriggerLimit;
@class SQLoyaltyPromotionTriggerLimit;
@protocol SQMoney;
@class SQMoney;



@protocol SQLoyaltyPromotion
@end

@interface SQLoyaltyPromotion : SQObject

/* The Square-assigned ID of the promotion. [optional]
 */
@property(nonatomic) NSString* _id;
/* The name of the promotion. 
 */
@property(nonatomic) NSString* name;
/* The points incentive for the promotion. This field defines whether promotion points are earned by multiplying base program points or by adding a specified number of points. 
 */
@property(nonatomic) SQLoyaltyPromotionIncentive* incentive;
/* The scheduling information that defines when purchases can qualify to earn points from an `ACTIVE` promotion. 
 */
@property(nonatomic) SQLoyaltyPromotionAvailableTimeData* availableTime;
/* The number of times a buyer can earn promotion points during a specified interval. If not specified, buyers can trigger the promotion an unlimited number of times. [optional]
 */
@property(nonatomic) SQLoyaltyPromotionTriggerLimit* triggerLimit;
/* The current status of the promotion. [optional]
 */
@property(nonatomic) NSString* status;
/* The timestamp of when the promotion was created, in RFC 3339 format. [optional]
 */
@property(nonatomic) NSString* createdAt;
/* The timestamp of when the promotion was canceled, in RFC 3339 format. [optional]
 */
@property(nonatomic) NSString* canceledAt;
/* The timestamp when the promotion was last updated, in RFC 3339 format. [optional]
 */
@property(nonatomic) NSString* updatedAt;
/* The ID of the [loyalty program](https://developer.squareup.com/reference/square_2023-10-18/objects/LoyaltyProgram) associated with the promotion. [optional]
 */
@property(nonatomic) NSString* loyaltyProgramId;
/* The minimum purchase amount required to earn promotion points. If specified, this amount is positive. [optional]
 */
@property(nonatomic) SQMoney* minimumSpendAmountMoney;
/* The IDs of any qualifying `ITEM_VARIATION` [catalog objects](https://developer.squareup.com/reference/square_2023-10-18/objects/CatalogObject). If specified, the purchase must include at least one of these items to qualify for the promotion.  This option is valid only if the base loyalty program uses a `VISIT` or `SPEND` accrual rule. With `SPEND` accrual rules, make sure that qualifying promotional items are not excluded.  You can specify `qualifying_item_variation_ids` or `qualifying_category_ids` for a given promotion, but not both. 
 */
@property(nonatomic) NSArray<NSString*>* qualifyingItemVariationIds;
/* The IDs of any qualifying `CATEGORY` [catalog objects](https://developer.squareup.com/reference/square_2023-10-18/objects/CatalogObject). If specified, the purchase must include at least one item from one of these categories to qualify for the promotion.  This option is valid only if the base loyalty program uses a `VISIT` or `SPEND` accrual rule. With `SPEND` accrual rules, make sure that qualifying promotional items are not excluded.  You can specify `qualifying_category_ids` or `qualifying_item_variation_ids` for a promotion, but not both. 
 */
@property(nonatomic) NSArray<NSString*>* qualifyingCategoryIds;

@end
