#import <Foundation/Foundation.h>
#import "SQObject.h"

/**
* Square Connect API
* Client library for accessing the Square Connect APIs
*
* OpenAPI spec version: 2.0
* Contact: developers@squareup.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#import "SQMoney.h"
#import "SQOrderLineItemAppliedTax.h"
@protocol SQMoney;
@class SQMoney;
@protocol SQOrderLineItemAppliedTax;
@class SQOrderLineItemAppliedTax;



@protocol SQOrderReturnServiceCharge
@end

@interface SQOrderReturnServiceCharge : SQObject

/* A unique ID that identifies the return service charge only within this order. [optional]
 */
@property(nonatomic) NSString* uid;
/* The service charge `uid` from the order containing the original service charge. `source_service_charge_uid` is `null` for unlinked returns. [optional]
 */
@property(nonatomic) NSString* sourceServiceChargeUid;
/* The name of the service charge. [optional]
 */
@property(nonatomic) NSString* name;
/* The catalog object ID of the associated [OrderServiceCharge](https://developer.squareup.com/reference/square_2023-10-18/objects/OrderServiceCharge). [optional]
 */
@property(nonatomic) NSString* catalogObjectId;
/* The version of the catalog object that this service charge references. [optional]
 */
@property(nonatomic) NSNumber* catalogVersion;
/* The percentage of the service charge, as a string representation of a decimal number. For example, a value of `\"7.25\"` corresponds to a percentage of 7.25%.  Either `percentage` or `amount_money` should be set, but not both. [optional]
 */
@property(nonatomic) NSString* percentage;
/* The amount of a non-percentage-based service charge.  Either `percentage` or `amount_money` should be set, but not both. [optional]
 */
@property(nonatomic) SQMoney* amountMoney;
/* The amount of money applied to the order by the service charge, including any inclusive tax amounts, as calculated by Square.  - For fixed-amount service charges, `applied_money` is equal to `amount_money`. - For percentage-based service charges, `applied_money` is the money calculated using the percentage. [optional]
 */
@property(nonatomic) SQMoney* appliedMoney;
/* The total amount of money to collect for the service charge.  __NOTE__: If an inclusive tax is applied to the service charge, `total_money` does not equal `applied_money` plus `total_tax_money` because the inclusive tax amount is already included in both `applied_money` and `total_tax_money`. [optional]
 */
@property(nonatomic) SQMoney* totalMoney;
/* The total amount of tax money to collect for the service charge. [optional]
 */
@property(nonatomic) SQMoney* totalTaxMoney;
/* The calculation phase after which to apply the service charge. [optional]
 */
@property(nonatomic) NSString* calculationPhase;
/* Indicates whether the surcharge can be taxed. Service charges calculated in the `TOTAL_PHASE` cannot be marked as taxable. [optional]
 */
@property(nonatomic) NSNumber* taxable;
/* The list of references to `OrderReturnTax` entities applied to the `OrderReturnServiceCharge`. Each `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level `OrderReturnTax` that is being applied to the `OrderReturnServiceCharge`. On reads, the applied amount is populated. [optional]
 */
@property(nonatomic) NSArray<SQOrderLineItemAppliedTax>* appliedTaxes;
/* The treatment type of the service charge. [optional]
 */
@property(nonatomic) NSString* treatmentType;
/* Indicates the level at which the apportioned service charge applies. For `ORDER` scoped service charges, Square generates references in `applied_service_charges` on all order line items that do not have them. For `LINE_ITEM` scoped service charges, the service charge only applies to line items with a service charge reference in their `applied_service_charges` field.  This field is immutable. To change the scope of an apportioned service charge, you must delete the apportioned service charge and re-add it as a new apportioned service charge. [optional]
 */
@property(nonatomic) NSString* scope;

@end
